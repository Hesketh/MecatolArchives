@page "/stats/people/{PersonIdentifier:guid}"
@using Hesketh.MecatolArchives.API.Data
@using Hesketh.MecatolArchives.API.Client.Clients
@using Hesketh.MecatolArchives.Website.Components.Controls;
@using Hesketh.MecatolArchives.Website.Helpers
@inject StatisticClient StatisticClient
@inject PersonClient PersonClient
@inject PlayClient PlayClient;

<PageTitle>@_title</PageTitle>

<MudCard Style="margin-bottom: 16px">
    <MudCardHeader>
        <MudText Typo="Typo.h4" Style="margin: 16px">@_title</MudText>
    </MudCardHeader>
    <MudCardContent>
        <StatisticTable Statistics="@(new[] { _statistics.Overall })" />
    </MudCardContent>
</MudCard>

<MudCard Style="margin-bottom: 16px">
    <MudCardHeader>
        <MudText Typo="Typo.h4" Style="margin: 16px">Factions</MudText>
    </MudCardHeader>
    <MudCardContent>
        <StatisticTable Statistics="@_statistics.Stats"
                        NavigationFormat="stats/factions/{0}" 
                        GetCustomNamePrefixFragment="GetFactionIcon" />
    </MudCardContent>
</MudCard>

<MudCard Style="margin-bottom: 16px">
    <MudCardHeader>
        <MudText Typo="Typo.h4" Style="margin: 16px">Play History</MudText>
    </MudCardHeader>
    <MudCardContent>
        <PlayHistory ReadOnly="true" Plays="@_playHistory"/>
    </MudCardContent>
</MudCard>

@code
{
    [Parameter] public Guid PersonIdentifier { get; set; }
    private Statistics _statistics = new();
    private ICollection<Play> _playHistory = new List<Play>();
    private string _title = "Player";

    protected override async Task OnParametersSetAsync()
    {
        _statistics = await StatisticClient.GetPersonFactionStatistics(PersonIdentifier);
        _playHistory = await PlayClient.GetPersonsPlaysAsync(PersonIdentifier);
        
        var person = await PersonClient.GetAsync(PersonIdentifier);
        _title = person.Name;

        StateHasChanged();
    }

    private RenderFragment? GetFactionIcon(object o)
    {
        if (o is Statistic statistic)
        {
            return @<MudImage Width="32" Height="32" Src="@FactionIconHelper.GetFactionIcon(statistic.Name)" Style="display: inline-block;" />;
        }
        return null;
    }
}